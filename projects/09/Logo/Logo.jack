class Logo {

    field boolean quit, error;
    field String cmd;
    field Turtle turtle;

    constructor Logo new() {
        let turtle = Turtle.new();
        return this;
    }

    method void dispose() {
        do turtle.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void run() {
        while (~quit) {
            //do promptUser();
            //do processCommand();
            // TEST
            do test();
        }
        return;
    }

    method void promptUser() {
        // Clear message/prompt area
        do Screen.setColor(false);
        do Screen.drawRectangle(0, 232, 511, 255);
        if (error) {
            do Output.moveCursor(21, 0);
            do Output.printString("Unknown command: ");
            do Output.printString(cmd);
            do Output.printString(" (type HELP)");
        }
        if (~(cmd = null)) {
            do cmd.dispose();
            let cmd = null;
        }
        do Output.moveCursor(22, 0);
        let cmd = Keyboard.readLine("?");
        return;
    }

    method void processCommand() {
        let error = true;
        if (StringUtil.equals(cmd, "QUIT")) {
            let quit = true;
            let error = false;
        }
        if (StringUtil.equals(cmd, "HELP")) {
            do showHelp();
            let error = false;
        }
        if (StringUtil.equals(cmd, "CLEAR")) {
            do clear();
            let error = false;
        }
        return;
    }

    method void showHelp() {
        do Screen.clearScreen();
        do Output.moveCursor(0, 0);
        do Output.printString("HELP"); do Output.println();
        do Output.printString("----"); do Output.println();
        do Output.println();
        do Output.printString("HELP    Show this help screen"); do Output.println();
        do Output.printString("CLEAR   Clear screen"); do Output.println();
        do Output.printString("QUIT    Quit program");
        return;
    }

    method void clear() {
        do Screen.clearScreen();
        do turtle.reset();
        do turtle.draw();
        return;
    }

    method void test() {
        var int a;
        var int count;
        do Screen.clearScreen();
        do turtle.reset();
        // draw a test pattern
        // do Output.moveCursor(0, 0);
        // let count = 23 * 64;
        // while (count > 0) {
        //     do Output.printChar(65 + (count&31));
        //     let count = count - 1;
        // }
        // do turtle._saveFrame();
        while (a < 37) {
            do turtle.draw();
            do turtle.right(10);
            do turtle.forward(10);
            //do Keyboard.readChar();
            let a = a + 1;
        }
        let a = 0;
        while (a < 37) {
            do turtle.draw();
            do turtle.left(10);
            do turtle.forward(10);
            //do Keyboard.readChar();
            let a = a + 1;
        }
        if (false) {
            do turtle.right(45);
            do turtle.forward(50);
            do turtle.draw();
            do turtle.left(90);
            do turtle.forward(50);
            do turtle.draw();
        }
        let quit = true;
        return;
    }
}